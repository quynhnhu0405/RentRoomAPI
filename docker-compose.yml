version: '3.8'

services:
  app:
    build: .
    container_name: rentroom-api
    ports:
      - '5000:5000'
    depends_on:
      - db
    environment:
      - PORT=5000
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root_password
      - DB_NAME=rentroom
      - DB_DIALECT=mysql
      - JWT_SECRET=99665b8358a560548a771a4e10265649898c76515776da419e228ecaee28938edb590f1435ff954a1f2844aad9290d36e0460055b37bf58810adc9d238bc64448a2a57a4d630a692b4f885951f40064450c1e4c2d116641a4d13dba5052ab0cfe3574d66be90848eca787451c60f9b89b16e51722d8f3aa81eea77707684dd28f1dede29c40719768ae249800625a9118ae1ec1e70e3e1a65d6d62f673b26e8deb49c2f8ec4fe94e838c97e4bce8b87c8a4941accd7a3a6ae8c20464572c2567673bda52e39a2e4722bd69682d3ae1628d38370e0ed80ee9f355261344c1119b96861f0c8c0d3c7c585359632377fff70ada274de1b24b16ffc02384ea55388c
    volumes:
      - ./:/app
      - /app/node_modules
    restart: unless-stopped
    command: >
      sh -c "npm run setup-db && npm run dev"

  db:
    image: mysql:8.0
    container_name: rentroom-mysql
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=rentroom
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

volumes:
  mysql-data: 